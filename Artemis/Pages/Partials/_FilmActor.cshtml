
@{
    Layout = null;
}

@(Html.Kendo().Grid<FilmActorViewModel>()
        .Name("gridActors")
        .HtmlAttributes(new { style = "font-size:16px" })
        .Columns(columns =>
        {
            columns.ForeignKey(m => m.ActorId, (IEnumerable<Actor>)ViewData["actors"]!, "ActorId", "FullName")
            .Width(300).Media("(min-width: 300px)");
            columns.Bound(m => m.Role).Width(400);
            columns.Bound(m => m.Notes).Width(300);
            columns.Command(command => { command.Destroy(); }).Width(100);
        })
        .ToolBar(toolbar =>
        {
            toolbar.Create();
            toolbar.Save();
        })
        .Editable(editable => editable.Mode(GridEditMode.InCell))
        .Navigatable()
        .Sortable()
        .Filterable()
        .Scrollable(scr => scr.Height(350))
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(5))
        .DataSource(source => source
        .Ajax()
        .PageSize(40)
        .Batch(true)
        .ServerOperation(false)
        .Model(model =>
        {
            model.Id(m => m.Id);
            model.Field(m => m.ActorId).DefaultValue(ViewData["defaultActor"]);
        })
        .Create(create => create.Url("FilmSecondary?handler=ActorCreate").Data("forgeryToken"))
        .Read(read => read.Url("FilmSecondary?handler=ActorRead").Data("forgeryToken"))
        .Update(update => update.Url("FilmSecondary?handler=ActorUpdate").Data("forgeryToken"))
        .Destroy(destroy => destroy.Url("FilmSecondary?handler=ActorDestroy").Data("forgeryToken"))
        .Events(events => events.Error("error_handler"))
        )
    )
