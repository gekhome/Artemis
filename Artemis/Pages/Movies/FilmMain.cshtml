@page

@model Artemis.Pages.Movies.FilmMainModel

@{
    ViewData["Title"] = "Manage Films";
}

@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@Html.AntiForgeryToken()

<partial name="_Message" for="StatusMessage" />

<div class="container-fluid">
    <div class="d-flex justify-content-between">
        <page-header add-title="Films management"></page-header>
        <div class="d-inline-flex float-end">
            <button class="gek-btn-success ms-2" onclick="RefreshGrid()">Refresh</button>
            <a class="gek-btn-primary ms-2" asp-action="Index" asp-controller="Home">Home</a>
        </div>
    </div>
    <hr />

    <div class="mb-2">
        @(Html.Kendo().Grid<FilmViewModel>()
            .Name("grid")
            .Columns(columns =>
            {
                columns.Bound(m => m.PosterImage).ClientTemplate(
                @"<div class='text-center'><img class='grid-photo' " + "src=\"data:image/*;base64, #:PosterImage#\" /></div>")
                .Filterable(false).Width(80).Media("(min-width: 100px)");
                columns.Bound(m => m.Title).Width(400).Media("(min-width: 400px)");
                columns.Bound(m => m.ReleaseDate).Format("{0:dd/MM/yyyy}").Width(160).Media("(min-width: 300px)");
                columns.Bound(m => m.RunningTime).Width(150).Title("Run.time (min)").Media("(min-width: 300px)");
                columns.ForeignKey(m => m.Language, (IEnumerable<Languages>)ViewData["languages"]!, "LanguageId", "Language").Width(150).Media("(min-width: 300px)");
                columns.Command(command => 
                { 
                    command.Destroy(); command.Custom("\uD83D\uDD89" + " Edit").Click("RowEdit");
                }).Width(220).Media("(min-width: 200px)");
                columns.Bound(m => m.FilmId).Title(" ").Filterable(false)
                .ClientTemplate("<a class=\"gek-btn-default\" href='" + Url.PageLink("/Movies/FilmSecondary") +
                    "?filmId=#=FilmId#' target=_blank><i class=\"fa-solid fa-pen\"></i> More</a>")
                .Width(140).Media("(min-width: 200px)");
            })
            .ToolBar(toolbar =>
            {
                toolbar.Create();
                toolbar.Save();
                toolbar.Search();
            })
            .Editable(editable => editable.Mode(GridEditMode.InCell))
            .Navigatable()
            .Sortable()
            .Filterable()
            .ColumnMenu(false)
            .Scrollable(scr => scr.Height(500))
            .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
            .ButtonCount(10))
            .DataSource(source => source
            .Ajax()
            .Batch(true)
            .PageSize(60)
            .ServerOperation(false)
            .Model(model =>
            {
                model.Id(m => m.FilmId);
                model.Field(m => m.FilmId).Editable(false);
                model.Field(m => m.PosterImage).Editable(false);
                model.Field(m => m.Language).DefaultValue((int)ViewData["defaultLanguage"]!);
            })
            .Create(create => create.Url("/Movies/FilmMain?handler=Create").Data("forgeryToken"))
            .Read(read => read.Url("/Movies/FilmMain?handler=Read").Data("forgeryToken"))
            .Update(update => update.Url("/Movies/FilmMain?handler=Update").Data("forgeryToken"))
            .Destroy(destroy => destroy.Url("/Movies/FilmMain?handler=Destroy").Data("forgeryToken"))
            .Events(events => events.Error("error_handler"))
            )
            .ClientDetailTemplateId("detail-template")
        )
    </div>

</div>


<div id="partialDiv">
    <partial name="_FilmEdit" model="Model.FilmViewModel" />
</div>

@section Scripts 
{
    <script type="text/template" id="detail-template">

        <div class="card card-outline-secondary m-1 p-1">
            <div class="d-inline-flex flex-row">
                <img src="data:image/*;base64, #:PosterImage#" class="me-4 poster"/>
                <div class="d-inline-flex flex-column mt-2">
                    <h4>#: Title # &nbsp;#: ReleaseYear #</h4>
                    <p class="long-text" style="max-width:800px"><i>#: PlotSummary #</i></p>
                    <p><label class="fw-semibold">Director:&nbsp;</label>#: Director #</p>
                    <p class="long-text" style="max-width:800px"><label class="fw-semibold">Producer(s):&nbsp;</label>#: Producer #</p>
                    <p><label class="fw-semibold">Running time:&nbsp;</label>#: RunningTime # mins</p>

                    # var budget = parseInt(Budget).toLocaleString(); #
                    # var boxOffice = parseInt(BoxOffice).toLocaleString(); #
                    <div class="d-inline-flex flex-row">
                        <label class="fw-semibold">Budget: &nbsp;</label>$#: budget # &nbsp;&nbsp;
                        <label class="fw-semibold">Box office: &nbsp;</label>$#: boxOffice #
                    </div>
                    <label class="fw-semibold mt-2">Genres:</label>
                    <div class="mt-2">
                        # var genreArray = Genres.split(','); #
                        # for (var i = 0; i < genreArray.length; i++) { #
                            <label class="tag">#: genreArray[i] #</label>
                        # } #
                    </div>
                </div>
            </div>
        </div>

    </script>

    <script type="text/javascript">

        function returnFalse() {
            return false;
        }

        function forgeryToken() {
            return kendo.antiForgeryTokens();
        }

        function RowEdit(e) {
            var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
            var filmID = dataItem.FilmId;

            if (!(filmID > 0)) {
                MessageBoxAlert("You must first save the record before editing.", "Error");
                return;
            }

            // Handle data source of partial view
            $.ajax({
                url: '/Movies/FilmMain?handler=FilmRecord&id=' + filmID,
                type: 'GET',
                data: "",
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    $("#partialDiv").html(response);
                    $("#modal-partial").modal('show');
                },
                failure: function () {
                    MessageBoxAlert("There was a problem acquiring data.", "Error");
                }
            });
        }

    </script>
}

